=== bezigon, vectorized (commit fed12eb) ===

each timing is from a cold start.

ascent | geodesics
     2 |      6038
     3 |     25744
     4 |     47705

--- Julia 1.31 ---

julia> Examples.movie(theme = Lamination.hollowbone, testframe = false)

Frame 0
  6.850477 seconds (13.77 M allocations: 698.749 MiB, 3.28% gc time)
Frame 1
  0.012827 seconds (123.69 k allocations: 10.455 MiB)
Frame 2
  0.014750 seconds (123.69 k allocations: 10.455 MiB)
Frame 3
  0.016682 seconds (123.69 k allocations: 10.455 MiB)
Frame 4
  0.055022 seconds (123.78 k allocations: 10.459 MiB, 64.49% gc time)
Frame 5
  0.011830 seconds (123.69 k allocations: 10.455 MiB)
Frame 6
  0.014136 seconds (123.68 k allocations: 10.449 MiB)
Frame 7
  0.011235 seconds (123.61 k allocations: 10.419 MiB)
Frame 8
  0.012108 seconds (123.62 k allocations: 10.421 MiB)
Frame 9
  0.015067 seconds (123.52 k allocations: 10.377 MiB)
Frame 10
  0.015040 seconds (123.52 k allocations: 10.377 MiB)
Frame 11
  0.039881 seconds (123.48 k allocations: 10.363 MiB, 65.77% gc time)
Frame 12
  0.012702 seconds (123.48 k allocations: 10.363 MiB)
Frame 13
  0.012179 seconds (123.48 k allocations: 10.362 MiB)
Frame 14
  0.012197 seconds (123.48 k allocations: 10.362 MiB)
Frame 15
  0.011087 seconds (123.49 k allocations: 10.363 MiB)
Frame 16
  0.015555 seconds (123.49 k allocations: 10.363 MiB)
Frame 17
  0.015199 seconds (123.52 k allocations: 10.376 MiB)
Frame 18
  0.035225 seconds (123.52 k allocations: 10.375 MiB, 60.94% gc time)
Frame 19
  0.012375 seconds (123.52 k allocations: 10.375 MiB)
Frame 20
  0.011300 seconds (123.51 k allocations: 10.375 MiB)
Frame 21
  0.014477 seconds (123.51 k allocations: 10.375 MiB)
Frame 22
  0.012349 seconds (123.52 k allocations: 10.375 MiB)
Frame 23
  0.015130 seconds (123.51 k allocations: 10.375 MiB)
Frame 24
  0.015228 seconds (123.52 k allocations: 10.375 MiB)
Frame 25
  0.032682 seconds (123.51 k allocations: 10.375 MiB, 59.84% gc time)

julia> Examples.movie(theme = Lamination.hollowbone)

Test frame
  7.079840 seconds (14.12 M allocations: 714.806 MiB, 3.72% gc time)

julia> Examples.movie(theme = Lamination.hollowbone, ascent = 3)

Test frame
  7.048727 seconds (17.21 M allocations: 914.801 MiB, 4.35% gc time)

julia> Examples.movie(theme = Lamination.hollowbone, ascent = 4)

Test frame
 16.744322 seconds (113.41 M allocations: 6.815 GiB, 11.81% gc time)

--- Julia 1.2 ---

julia> Examples.movie(theme = Lamination.hollowbone, testframe = false)

Frame 0
  7.863725 seconds (16.14 M allocations: 832.305 MiB, 9.30% gc time)
Frame 1
  0.012962 seconds (126.22 k allocations: 10.528 MiB)
Frame 2
  0.023405 seconds (126.30 k allocations: 10.532 MiB, 27.16% gc time)
Frame 3
  0.014615 seconds (126.22 k allocations: 10.528 MiB)
Frame 4
  0.012631 seconds (126.22 k allocations: 10.528 MiB)
Frame 5
  0.017386 seconds (126.22 k allocations: 10.528 MiB, 20.24% gc time)
Frame 6
  0.017274 seconds (126.20 k allocations: 10.522 MiB, 25.07% gc time)
Frame 7
  0.013215 seconds (126.11 k allocations: 10.492 MiB)
Frame 8
  0.013428 seconds (126.12 k allocations: 10.494 MiB)
Frame 9
  0.018237 seconds (125.97 k allocations: 10.448 MiB, 20.49% gc time)
Frame 10
  0.016933 seconds (125.97 k allocations: 10.448 MiB, 23.76% gc time)
Frame 11
  0.014105 seconds (125.93 k allocations: 10.435 MiB)
Frame 12
  0.017470 seconds (125.92 k allocations: 10.434 MiB, 20.48% gc time)
Frame 13
  0.017389 seconds (125.92 k allocations: 10.433 MiB, 23.44% gc time)
Frame 14
  0.012865 seconds (125.92 k allocations: 10.433 MiB)
Frame 15
  0.013115 seconds (125.92 k allocations: 10.434 MiB)
Frame 16
  0.017574 seconds (125.92 k allocations: 10.434 MiB, 20.18% gc time)
Frame 17
  0.012966 seconds (125.97 k allocations: 10.447 MiB)
Frame 18
  0.015695 seconds (125.97 k allocations: 10.447 MiB)
Frame 19
  0.017679 seconds (125.97 k allocations: 10.446 MiB, 20.10% gc time)
Frame 20
  0.016984 seconds (125.96 k allocations: 10.446 MiB, 25.26% gc time)
Frame 21
  0.012884 seconds (125.97 k allocations: 10.446 MiB)
Frame 22
  0.013116 seconds (125.96 k allocations: 10.446 MiB)
Frame 23
  0.018524 seconds (125.96 k allocations: 10.446 MiB, 19.43% gc time)
Frame 24
  0.012352 seconds (125.97 k allocations: 10.446 MiB)
Frame 25
  0.013792 seconds (125.97 k allocations: 10.446 MiB)

julia> Examples.movie(theme = Lamination.hollowbone)

Test frame
  8.295041 seconds (16.53 M allocations: 853.047 MiB, 8.93% gc time)

julia> Examples.movie(theme = Lamination.hollowbone, ascent = 3)

Test frame
  8.794842 seconds (19.63 M allocations: 1.026 GiB, 8.53% gc time)

julia> Examples.movie(theme = Lamination.hollowbone, ascent = 4)

Test frame
 18.167959 seconds (115.85 M allocations: 6.949 GiB, 11.90% gc time)

=== bezigon, non-vectorized (commit ac9594c) ===

each timing is from a cold start.

=== bezigon, non-vectorized, one frame only (commit ac9594c) ===

each timing is from a cold start. this may be misleading. based on profiling and comparing second-run times for increasing ascents, i'm starting to suspect that a large part of the recorded time and allocations are spent on compilation.

julia> Examples.movie()
  Inking triangles
    2.813126 seconds (5.94 M allocations: 321.476 MiB, 5.56% gc time)
  Composing triangles
    0.006405 seconds (1.77 k allocations: 93.868 KiB)
  9.787447 seconds (20.34 M allocations: 1.037 GiB, 8.44% gc time)

julia> Examples.movie(svg = true)
  Inking triangles
    2.739136 seconds (5.94 M allocations: 321.009 MiB, 4.87% gc time)
  Composing triangles
    0.006330 seconds (1.77 k allocations: 93.868 KiB)
  9.635546 seconds (20.34 M allocations: 1.037 GiB, 7.99% gc time)

julia> Examples.movie(theme = Lamination.bone)
  Inking triangles
    2.203953 seconds (6.61 M allocations: 538.642 MiB, 36.96% gc time)
  Composing triangles
    0.016530 seconds (4.73 k allocations: 253.001 KiB)
 10.970602 seconds (24.22 M allocations: 1.460 GiB, 14.05% gc time)

------------

=== exhaustive search

  0.000438 seconds (2.21 k allocations: 64.313 KB)
1 ~~~~~~~~~
  0.000866 seconds (4.30 k allocations: 125.219 KB)
2 ~~~~~~~~~
  0.001834 seconds (8.48 k allocations: 247.031 KB)
3 ~~~~~~~~~
  0.005392 seconds (16.83 k allocations: 490.563 KB)
4 ~~~~~~~~~
  0.010606 seconds (33.53 k allocations: 977.594 KB)
5 ~~~~~~~~~
  0.031144 seconds (66.94 k allocations: 1.906 MB)
6 ~~~~~~~~~
  0.103774 seconds (133.76 k allocations: 3.808 MB, 10.01% gc time)
7 ~~~~~~~~~
  0.193489 seconds (267.39 k allocations: 7.613 MB)
8 ~~~~~~~~~

=== sort & search

  0.150979 seconds (103.06 k allocations: 4.563 MB)
25 blocks by in
25 blocks by out
1 ~~~~~~~~~
  0.000555 seconds (4.32 k allocations: 127.641 KB)
49 blocks by in
49 blocks by out
2 ~~~~~~~~~
  0.001033 seconds (8.50 k allocations: 250.609 KB)
97 blocks by in
97 blocks by out
3 ~~~~~~~~~
  0.002104 seconds (16.85 k allocations: 496.297 KB)
193 blocks by in
193 blocks by out
4 ~~~~~~~~~
  0.004174 seconds (33.56 k allocations: 987.922 KB)
385 blocks by in
385 blocks by out
5 ~~~~~~~~~
  0.009721 seconds (66.97 k allocations: 1.925 MB)
769 blocks by in
769 blocks by out
6 ~~~~~~~~~
  0.018276 seconds (133.78 k allocations: 3.845 MB)
1537 blocks by in
1537 blocks by out
7 ~~~~~~~~~
  0.040277 seconds (267.42 k allocations: 7.684 MB, 14.48% gc time)
3073 blocks by in
3073 blocks by out
8 ~~~~~~~~~

=== scancollect

  0.260654 seconds (206.63 k allocations: 9.169 MB)
25 blocks by in
25 blocks by out
1 ~~~~~~~~~
  0.000672 seconds (4.33 k allocations: 127.766 KB)
49 blocks by in
49 blocks by out
2 ~~~~~~~~~
  0.001059 seconds (8.50 k allocations: 250.734 KB)
97 blocks by in
97 blocks by out
3 ~~~~~~~~~
  0.002178 seconds (16.86 k allocations: 496.422 KB)
193 blocks by in
193 blocks by out
4 ~~~~~~~~~
  0.004400 seconds (33.56 k allocations: 988.047 KB)
385 blocks by in
385 blocks by out
5 ~~~~~~~~~
  0.010282 seconds (66.97 k allocations: 1.925 MB)
769 blocks by in
769 blocks by out
6 ~~~~~~~~~
  0.021562 seconds (133.79 k allocations: 3.845 MB)
1537 blocks by in
1537 blocks by out
7 ~~~~~~~~~
  0.045738 seconds (267.42 k allocations: 7.685 MB, 16.31% gc time)
3073 blocks by in
3073 blocks by out
8 ~~~~~~~~~
